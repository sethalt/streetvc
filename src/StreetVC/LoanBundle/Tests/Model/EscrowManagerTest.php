<?php
namespace StreetVC\LoanBundle\Model;

use StreetVC\LoanBundle\Document\LoanRequest;
use Doctrine\ODM\MongoDB\DocumentManager;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;
use StreetVC\Tests\BaseTestCase;
use StreetVC\LoanBundle\Event\EscrowEvents;
use StreetVC\LoanBundle\Event\FundEscrowEvent;
use StreetVC\LoanBundle\Document\Escrow;
use StreetVC\UserBundle\Document\User;
use StreetVC\LenderBundle\Document\Lender;
use StreetVC\LenderBundle\Document\LoanCommitment;
//use Stubs\DocumentManager;

/**
 * Test class for EscrowManager.
 * Generated by PHPUnit on 2014-07-15 at 13:24:18.
 */
class EscrowManagerTest extends BaseTestCase
{
    /**
     * @var EscrowManager
     */
    protected $manager;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    public function setUp()
    {
        parent::setUp();
        $this->manager = $this->get('escrow.manager');
//        $dispatcher = $this->getMock('EventDispatcher');
//        $this->object = new EscrowManager($om, $dispatcher);
    }

    private function getLoanRequest()
    {
        $loanRequest = new LoanRequest();
        $loanRequest->setTerm(3)->setFundingGoal(25000)->setUser($this->getMock('StreetVC\UserBundle\Document\User'))->setBusiness($this->getMock('StreetVC\BorrowerBundle\Document\Business'))->setTitle('test')->setAdditionalRevenue(100)->setTimeToUtilize(3);
    }

    /**
    public function testCreateEscrowFromLoanRequest()
    {
        $loanRequest = $this->getLoanRequest();
        $escrow = $this->manager->createEscrowFromLoanRequest($loanRequest);
        $this->assertEquals($loanRequest->getEscrowId(), $escrow->getId());
    }
     */

    /*
    public function testOnFundEscrow()
        $user = new User();
        $lender = new Lender();
        $user->setLender($lender);
        $commitment = new LoanCommitment($escrow, $user);

        $event = new FundEscrowEvent($commitment);
        $this->manager->onFundEscrow($event);
        $this->assertTrue($lender->hasFundedEscrow($escrow));
    }
        */

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }
}
?>
