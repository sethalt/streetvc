<?php
namespace StreetVC\LoanBundle\Model;

use StreetVC\LoanBundle\Document\LoanRequest;
use Doctrine\ODM\MongoDB\DocumentManager;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;
use StreetVC\Tests\BaseTestCase;
//use Stubs\DocumentManager;

/**
 * Test class for EscrowManager.
 * Generated by PHPUnit on 2014-07-15 at 13:24:18.
 */
class LoanRequestManagerTest extends BaseTestCase
{
    /**
     * @var LoanRequestManager
     */
    protected $manager;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    public function setUp()
    {
        parent::setUp();
        $this->manager = $this->get('loanrequest.manager');
//        $dispatcher = $this->getMock('EventDispatcher');
//        $this->object = new EscrowManager($om, $dispatcher);
    }

    public function testCreate()
    {
        $object = $this->manager->create();
        $this->assertInstanceOf($this->manager->getClass(), $object);
    }

    public function testStateMachineIsInjected()
    {
        $object = $this->manager->create();
        $sm = $this->manager->getStateMachine($object);
        $sm->initialize();
        $this->assertEquals($sm->getCurrentState(), $object->getState());
    }

    public function getLoanRequest()
    {
        $loanRequest = $this->manager->create();
        $loanRequest->setTerm(3)->setFundingGoal(25000)->setUser($this->getMock('StreetVC\UserBundle\Document\User'))->setBusiness($this->getMock('StreetVC\BorrowerBundle\Document\Business'))->setTitle('test')->setAdditionalRevenue(100)->setTimeToUtilize(3);

        return $loanRequest;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }
}
?>
